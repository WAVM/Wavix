parameters:
  buildConfiguration: Release
  name: ''
  vmImage: 'VS2017-Win2016'
  cmakeArgs: '-G "Visual Studio 15 2017 Win64"'
  llvmBranch: release/6.x
  buildLLVM: true
  vsPlatform: x64


jobs:
  - job: ${{ parameters.name }}

    pool:
      vmImage: ${{ parameters.vmImage }}

    timeoutInMinutes: 120

    steps:
    - script: git clone -b ${{ parameters.llvmBranch}} https://github.com/llvm/llvm-project $(Build.ArtifactStagingDirectory)/llvm-project
      displayName: Clone LLVM

    - task: CMake@1
      displayName: Configure LLVM
      inputs:
        workingDirectory: '$(Build.ArtifactStagingDirectory)/llvm-project/llvm/build'
        cmakeArgs: '${{ parameters.cmakeArgs }} -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_GO_TESTS=OFF -DLLVM_INCLUDE_TOOLS=OFF -DLLVM_INCLUDE_UTILS=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_OPTIMIZED_TABLEGEN=ON $(Build.ArtifactStagingDirectory)/llvm-project/llvm/'

    - task: VSBuild@1
      displayName: Build LLVM
      inputs:
        solution: '$(Build.ArtifactStagingDirectory)/llvm-project/llvm/build/LLVM.sln'
        platform: x64
        configuration: ${{ parameters.buildConfiguration }}

    - task: CMake@1
      displayName: Configure WAVM
      inputs:
        workingDirectory: '$(Build.ArtifactStagingDirectory)/build'
        cmakeArgs: '${{ parameters.cmakeArgs }} -DLLVM_DIR=$(Build.ArtifactStagingDirectory)/llvm-project/llvm/build/lib/cmake/llvm $(Build.SourcesDirectory)'

    - task: VSBuild@1
      displayName: Build WAVM
      inputs:
        solution: '$(Build.ArtifactStagingDirectory)/build/WAVM.sln'
        platform: ${{ parameters.vsPlatform }}
        configuration: ${{ parameters.buildConfiguration }}

    - script: ctest -j%NUMBER_OF_PROCESSORS% -C %buildConfiguration% -V
      displayName: Run WAVM tests
      workingDirectory: $(Build.ArtifactStagingDirectory)/build
      env:
        buildConfiguration: ${{ parameters.buildConfiguration }}